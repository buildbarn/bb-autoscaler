# gazelle:ignore

load("@rules_go//extras:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library")

gomock(
    name = "buildqueuestate",
    out = "buildqueuestate.go",
    interfaces = ["BuildQueueStateClient"],
    library = "@com_github_buildbarn_bb_remote_execution//pkg/proto/buildqueuestate",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "cloud_aws",
    out = "cloud_aws.go",
    interfaces = [
        "AutoScalingClient",
        "LifecycleHookHandler",
        "SQSClient",
        "SQSMessageHandler",
    ],
    library = "//pkg/cloud/aws",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "smithy",
    out = "smithy.go",
    interfaces = ["APIError"],
    library = "@com_github_aws_smithy_go//:smithy-go",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

gomock(
    name = "storage_util",
    out = "storage_util.go",
    interfaces = ["ErrorLogger"],
    library = "@com_github_buildbarn_bb_storage//pkg/util",
    mockgen_model_library = "@org_uber_go_mock//mockgen/model",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "mock",
)

go_library(
    name = "mock",
    srcs = [
        ":buildqueuestate.go",
        ":cloud_aws.go",
        ":smithy.go",
        ":storage_util.go",
    ],
    importpath = "github.com/buildbarn/bb-autoscaler/internal/mock",
    visibility = ["//:__subpackages__"],
    deps = [
        "@com_github_aws_aws_sdk_go_v2_service_autoscaling//:autoscaling",
        "@com_github_aws_aws_sdk_go_v2_service_sqs//:sqs",
        "@com_github_aws_smithy_go//:smithy-go",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/buildqueuestate",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//types/known/emptypb:go_default_library",
        "@org_uber_go_mock//gomock",
    ],
)
